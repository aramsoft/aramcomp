<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<!-- 배치관리 스케줄러 -->
	<bean id="batchScheduler" class="aramframework.com.sym.bat.service.BatchScheduler"
		init-method="init" destroy-method="destroy">
		<property name="batchSchdulService" ref="batchSchdulService" />
		<property name="idgenService" ref="batchResultIdGnrService" />
	</bean>

	<!-- 백업관리 스케줄러 -->
	<bean id="backupScheduler" class="aramframework.com.sym.sym.bak.service.BackupScheduler"
		init-method="init" destroy-method="destroy">
		<property name="backupOpertService" ref="backupOpertService" />
		<property name="idgenService" ref="backupResultIdGnrService" />
	</bean>

	<!-- SMS 전송 결과 수신 처리 -->
	<!-- 시작하고 1분후,  매 분1마다  실행한다 .(milisecond)-->
<!-- 
	<bean id="smsInfoReceiverJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="smsInfoReceiver" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="smsInfoReceiverTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean"> 
		<property name="jobDetail" ref="smsInfoReceiverJob" /> 
	 	<property name="startDelay" value="60000" /> 
	 	<property name="repeatInterval" value="60000" /> 
	</bean> 
	<bean id="smsInfoReceiverScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="smsInfoReceiverTrigger" />
			</list>
		</property>
	</bean>
-->	

	<!-- 코드 수신 연계 처리 -->
	<!-- 시작하고 1분후,  매 분1마다  실행한다 .(milisecond)-->
	
	<!-- 기관코드 수신 작업 정의  -->
<!-- 
	<bean id="insttCodeReceiverJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="insttCodeRecptnService" />
		<property name="targetMethod" value="insertInsttCodeRecptn" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="insttCodeReceiverTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="insttCodeReceiverJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="60000" />
	</bean>
-->
	<!-- 법정동 코드 수신 작업 정의  -->
<!-- 	
	<bean id="administCodeReceiverJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="administCodeRecptnService" />
		<property name="targetMethod" value="insertAdministCodeRecptn" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="administCodeReceiverTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="administCodeReceiverJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="60000" />
	</bean>
-->
	<!-- 코드수신 스케줄러 -->
<!-- 	
	<bean id="codeReceiverScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="insttCodeReceiverTrigger" />
				<ref bean="administCodeReceiverTrigger" />
			</list>
		</property>
	</bean>
-->

	<!-- 서버 모니터링 -->
	<!-- 시작하고 1분후,  매 분10마다  실행한다 .(milisecond)-->
	
	<!-- DB서비스모니터링  작업 정의 -->
<!-- 
	<bean id="dbMntrngJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="dbMntrngScheduling" />
		<property name="targetMethod" value="monitorDb" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="dbMntrngTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="dbMntrngJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="600000" />
	</bean>
-->	
	<!-- 파일시스템모니터링 작업 정의 -->
<!-- 
	<bean id="fileSysMntrngJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="fileSysMntrngScheduling" />
		<property name="targetMethod" value="monitorFileSys" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="fileSysMntrngTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="fileSysMntrngJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="600000" />
	</bean>
-->
	<!-- HTTP서비스모니터링 작업 정의  -->
<!-- 
	<bean id="httpMntrngJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="httpMntrngScheduling" />
		<property name="targetMethod" value="monitorHttp" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="httpMntrngTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean"> 
		<property name="jobDetail" ref="httpMntrngJob" /> 
		<property name="startDelay" value="60000" /> 
		<property name="repeatInterval" value="600000" /> 
	</bean> 
-->
	<!-- 네트워크서비스모니터링 작업 정의  -->
<!-- 
	<bean id="ntwrkSvcMntrngJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="ntwrkSvcMntrngScheduling" />
		<property name="targetMethod" value="monitorNtwrkSvc" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="ntwrkSvcMntrngTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="ntwrkSvcMntrngJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="600000" />
	</bean>
-->
	<!-- 프로세스모니터링 작업 정의  -->
<!-- 
	<bean id="processMntrngJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="processMonScheduling" />
		<property name="targetMethod" value="monitorProcess" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="processMntrngTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="processMntrngJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="600000" />
	</bean>
-->
	<!-- 서버자원모니터링 작업 정의 -->
 <!-- 
    <bean id="serverResrceMntrngJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="serverResrceMntrngScheduling" />
        <property name="targetMethod" value="monitorServerResrce" />
        <property name="concurrent" value="false" />
    </bean>
    <bean id="serverResrceMntrngTrigger"
        class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="serverResrceMntrngJob" />
        <property name="startDelay" value="60000" />
        <property name="repeatInterval" value="600000" />
    </bean>
-->
	<!-- 송수신모니터링  작업 정의 -->
<!-- 
	<bean id="trsmrcvMntrngJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="trsmrcvMntrngScheduling" />
		<property name="targetMethod" value="monitor" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="trsmrcvMntrngTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="trsmrcvMntrngJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="600000" />
	</bean>
-->
	<!-- 모니터링 스케줄러 -->
<!-- 
	<bean id="mntrngScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="trsmrcvMntrngTrigger" />
				<ref bean="dbMntrngTrigger" />
				<ref bean="httpMntrngTrigger" />
				<ref bean="processMntrngTrigger" />
				<ref bean="ntwrkSvcMntrngTrigger" />
				<ref bean="fileSysMntrngTrigger" />
				<ref bean="serverResrceMntrngTrigger" />
			</list>
		</property>
	</bean>
 -->
 
 	<!-- 로그요약 -->
	<!-- 시작하고 1분후,  매 24시간마다  실행한다 .(milisecond)-->
	
	<!-- 웹 로그 요약  작업 정의 -->
<!-- 
	<bean id="webLoggingJob" 
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="webLogScheduling" />
		<property name="targetMethod" value="webLogSummary" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="webLogTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="webLoggingJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="86400000" />
	</bean>
-->	
	<!-- 시스템 로그 요약 작업 정의  -->
<!-- 
	<bean id="sysLoggingJob" 
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="sysLogScheduling" />
		<property name="targetMethod" value="sysLogSummary" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="sysLogTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="sysLoggingJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="86400000" />
	</bean>
-->
	<!-- 사용자 로그 생성 작업 정의  -->
<!-- 	
	<bean id="userLoggingJob" 
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="userLogScheduling" />
		<property name="targetMethod" value="userLogInsert" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="userLogTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="userLoggingJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="86400000" />
	</bean>
-->	
	<!-- 송수신 로그 요약 작업 정의  -->
<!-- 
	<bean id="trsmrcvLoggingJob" 
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="trsmrcvLogScheduling" />
		<property name="targetMethod" value="trsmrcvLogSummary" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="trsmrcvLogTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="trsmrcvLoggingJob" />
		<property name="startDelay" value="60000" />
		<property name="repeatInterval" value="86400000" />
	</bean>
-->
	<!-- 스케쥴러(로그요약) 등록-->
<!-- 
	<bean id="logSummaryScheduler" 
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
	 			<ref bean="sysLogTrigger" /> 
				<ref bean="webLogTrigger" /> 
	 			<ref bean="trsmrcvLogTrigger" /> 
	 			<ref bean="userLogTrigger" /> 
			</list>
		</property>
	</bean>
-->

	<!-- 통계 집계 스케줄링 -->
	<!-- 시작하고 2분후,  매 24시간마다  실행한다 .(milisecond)-->

	<!-- 사용자 통계 집계 작업 정의 -->
<!-- 
	<bean id="userStatsJob" 
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="userStatsScheduling" />
		<property name="targetMethod" value="summaryUserStats" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="userStatsTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean"> 
	 	<property name="jobDetail" ref="userStatsJob" />
	 	<property name="startDelay" value="120000" /> 
	 	<property name="repeatInterval" value="86400000" />
	</bean>
-->
	<!-- 게시판 통계 작업 정의 -->
<!-- 
	<bean id="bbsStatsJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="bbsStatsScheduling" />
		<property name="targetMethod" value="summaryBbsStats" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="bbsStatsTrigger" 
		class="org.springframework.scheduling.quartz.SimpleTriggerBean"> 
		<property name="jobDetail" ref="bbsStatsJob" />
		<property name="startDelay" value="120000" />
		<property name="repeatInterval" value="86400000" />
	</bean>
-->
	<!-- 스케쥴러(통계집계) 등록-->
<!--
	<bean id="statsSummaryScheduler" 
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="userStatsTrigger" />
				<ref bean="bbsStatsTrigger" /> 
			</list>
		</property>
	</bean>
-->
 
 </beans>
