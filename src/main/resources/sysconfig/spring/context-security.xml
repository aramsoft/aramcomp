<?xml version="1.0" encoding="UTF-8"?>
<beans:beans  xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    					http://www.springframework.org/schema/beans/spring-beans.xsd
        				http://www.springframework.org/schema/security 
        				http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/images/**" security="none"/>
    <http pattern="/fonts/**" security="none"/>
    <http pattern="/html/**" security="none"/>
    <http pattern="/css/**" security="none"/>
    <http pattern="/js/**" security="none"/>
  	<http pattern="/validator.do" security="none" />
  	<http pattern="/favicon.ico" security="none" />
	
	<!-- authentication -->
    <http auto-config="true" request-matcher="regex">
        <form-login login-page="/uat/uia/loginUsr.do" 
        			login-processing-url="/j_spring_security_check"
                    authentication-failure-url="/uat/uia/loginUsr.do?login_error=1"
                    authentication-success-handler-ref="simpleUrlAuthenticationSuccessHandler" />
        <logout logout-url="/j_spring_security_logout"
        		success-handler-ref="simpleUrlLogoutSuccessHandler" />
		<access-denied-handler error-page="/sec/arm/accessDenied.do"/>
		
        <anonymous/>
 
		<csrf disabled="true"/>
		<headers>
			<frame-options policy="SAMEORIGIN" />
		</headers>
		
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/uat/uia/loginUsr.do?login_error=5" />
		</session-management> 
<!-- 
 		<intercept-url pattern="\A/uat/uia/loginUsr.do.*\Z" requires-channel="https" />
 		<intercept-url pattern="\A/uss/umt/.*\.do.*\Z" requires-channel="https" />
 		<intercept-url pattern="\A/.*\Z" requires-channel="any" />
     
     	<port-mappings>
      		<port-mapping http="80" https="8443"/>
      		<port-mapping http="6060" https="8443"/>
    	</port-mappings>
-->
		<custom-filter ref="logAuditFilter" position="FIRST"/>
    </http>
    
	<beans:bean id="logAuditFilter"
	    class="aramframework.com.cmm.config.filter.LogAuditFilter">
	</beans:bean>
<!-- 	
	<beans:bean id="htmlTagFilter"
	    class="aramframework.com.cmm.config.filter.HTMLTagFilter">
	</beans:bean>

	<beans:bean id="loginPolicyFilter"
	    class="aramframework.com.cmm.config.filter.LoginPolicyFilter">
	</beans:bean>
	
	<beans:bean id="httpsSessionFilter"
	    class="aramframework.com.cmm.config.filter.HttpsSessionFilter">
	</beans:bean>
-->	
	
	<beans:bean id="targetRedirectStrategy"
	    class="aramframework.com.cmm.config.security.TargetRedirectStrategy">
    	<beans:property name="contextRelative" value="true" />
	</beans:bean>    
	
	<beans:bean id="simpleUrlAuthenticationSuccessHandler"
	    class="aramframework.com.cmm.config.security.SimpleUrlAuthenticationSuccessHandler">
    	<beans:property name="alwaysUseDefaultTargetUrl" value="true" />
	    <beans:property name="defaultTargetUrl" value="/uat/uia/actionMain.do"/>
	    <beans:property name="targetUrlParameter" value="targetUrl"/>
	    <beans:property name="redirectStrategy" ref="targetRedirectStrategy"/>
	</beans:bean>
	
	<beans:bean id="simpleUrlLogoutSuccessHandler"
	    class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
    	<beans:property name="alwaysUseDefaultTargetUrl" value="false" />
	    <beans:property name="defaultTargetUrl" value="/uat/uia/actionLogoutSuccess.do"/>
	    <beans:property name="targetUrlParameter" value="targetUrl"/>
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="jdbcUserService" >
			<password-encoder ref="passwordEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="passwordEncoder" 
		class="aramframework.com.cmm.config.filter.AramPasswordEncoder">
	</beans:bean>

	<!-- secure object service -->
    <beans:bean id="securedObjectService"
        class="aramframework.com.cmm.security.securedobject.impl.SecuredObjectServiceImpl">
        <beans:property name="securedObjectMapper" ref="securedObjectMapper"/>
    </beans:bean>
 
    <beans:bean id="securedObjectMapper" 
    	class="aramframework.com.cmm.security.securedobject.impl.SecuredObjectDAOImpl" >
    </beans:bean>
    
    <beans:bean id="jdbcUserService"
        class="org.egovframe.rte.fdl.security.userdetails.jdbc.EgovJdbcUserDetailsManager" >

        <beans:property name="usersByUsernameQuery" value=
        		"SELECT USER_ID, PASSWORD, 1 ENABLED, 
        		        USER_NM, USER_ZIP, USER_ADRES, USER_EMAIL, USER_SE, ORGNZT_ID, MBTLNUM,
                        (select a.ORGNZT_NM from COMTN_ORGNZT_INFO a where a.ORGNZT_ID = m.ORGNZT_ID) ORGNZT_NM 
                   FROM COMVN_USER_MASTER m 
                  WHERE USER_ID = ? "/>
        <beans:property name="authoritiesByUsernameQuery" value=
        		"SELECT A.SCRTY_DTRMN_TRGET_ID USER_ID, A.AUTHOR_CODE AUTHORITY 
                   FROM COMTN_EMPLYR_SCRTY_ESTBS A, COMVN_USER_MASTER B 
                  WHERE A.SCRTY_DTRMN_TRGET_ID = B.USER_ID 
                    AND B.USER_ID = ? "/>
        <beans:property name="roleHierarchy" ref="roleHierarchy"/>
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="mapClass" value="aramframework.com.cmm.security.userdetails.impl.SessionMapping"/> 
    </beans:bean>
    
    <beans:bean id="roleHierarchy" 
        class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl" >
        <beans:property name="hierarchy" ref="hierarchyStrings"/>
    </beans:bean>

    <beans:bean id="hierarchyStrings"
        class="org.egovframe.rte.fdl.security.userdetails.hierarchicalroles.HierarchyStringsFactoryBean"
        init-method="init">
        <beans:property name="securedObjectService" ref="securedObjectService"/>
    </beans:bean>

 	<!-- authorization -->
    <beans:bean id="accessDecisionManager" 
    	class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:property name="allowIfAllAbstainDecisions" value="false" />
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter" />
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <!--  url  -->
    <beans:bean id="filterSecurityInterceptor"
        class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="databaseSecurityMetadataSource" />
    </beans:bean>

    <beans:bean id="databaseSecurityMetadataSource"
        class="org.egovframe.rte.fdl.security.intercept.EgovReloadableFilterInvocationSecurityMetadataSource">
        <beans:constructor-arg ref="requestMap" />      
        <beans:property name="securedObjectService" ref="securedObjectService"/>
    </beans:bean>

    <beans:bean id="requestMap"
        class="org.egovframe.rte.fdl.security.intercept.UrlResourcesMapFactoryBean" init-method="init">
        <beans:property name="securedObjectService" ref="securedObjectService"/>
    </beans:bean>
  
    <!--  method  -->
    <beans:bean id="methodDefinitionSourceAdvisor" 
    	class="org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor">
		<beans:constructor-arg value="methodSecurityInterceptor" />
		<beans:constructor-arg ref="delegatingMethodSecurityMetadataSource" />
		<beans:constructor-arg value="delegatingMethodSecurityMetadataSource" />
    </beans:bean>
    
    <beans:bean id="methodSecurityInterceptor" 
    	class="org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor">
        <beans:property name="validateConfigAttributes" value="false" />
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="accessDecisionManager" ref="accessDecisionManager"/>
        <beans:property name="securityMetadataSource" ref="delegatingMethodSecurityMetadataSource" />
    </beans:bean>

    <beans:bean id="delegatingMethodSecurityMetadataSource" 
    	class="org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource">
         <beans:constructor-arg>
            <beans:list>
                <beans:ref bean="methodDefinitionSources"/>
                <beans:bean class="org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource" />
<!-- 
                <beans:bean class="org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource" />
-->
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="methodDefinitionSources"  
        class="org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource">
        <beans:constructor-arg ref="methodMap" />
    </beans:bean>
    
    <beans:bean id="methodMap"
        class="org.egovframe.rte.fdl.security.intercept.MethodResourcesMapFactoryBean"
        init-method="init">
        <beans:property name="securedObjectService" ref="securedObjectService"/>
        <beans:property name="resourceType" value="method"/>
    </beans:bean>
   
    <!--  pointcut -->
<!-- 
    <beans:bean id="protectPointcutPostProcessor" 
    	class="org.springframework.security.config.method.ProtectPointcutPostProcessor">
        <beans:constructor-arg ref="methodDefinitionSources" />
        <beans:property name="pointcutMap" ref="pointcutMap"/>
    </beans:bean>

    <beans:bean id="pointcutMap"
        class="org.egovframe.rte.fdl.security.intercept.MethodResourcesMapFactoryBean"
        init-method="init">
        <beans:property name="securedObjectService" ref="securedObjectService"/>
        <beans:property name="resourceType" value="pointcut"/>
    </beans:bean>
-->
</beans:beans>
